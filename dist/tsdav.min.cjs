"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,t=require("cross-fetch"),r=require("debug"),a=require("xml-js"),s=require("base-64");exports.DAVNamespace=void 0,(e=exports.DAVNamespace||(exports.DAVNamespace={})).CALENDAR_SERVER="http://calendarserver.org/ns/",e.CALDAV_APPLE="http://apple.com/ns/ical/",e.CALDAV="urn:ietf:params:xml:ns:caldav",e.CARDDAV="urn:ietf:params:xml:ns:carddav",e.DAV="DAV:";const o={[exports.DAVNamespace.CALDAV]:"xmlns:c",[exports.DAVNamespace.CARDDAV]:"xmlns:card",[exports.DAVNamespace.CALENDAR_SERVER]:"xmlns:cs",[exports.DAVNamespace.CALDAV_APPLE]:"xmlns:ca",[exports.DAVNamespace.DAV]:"xmlns:d"};var n,d;exports.DAVNamespaceShort=void 0,(n=exports.DAVNamespaceShort||(exports.DAVNamespaceShort={})).CALDAV="c",n.CARDDAV="card",n.CALENDAR_SERVER="cs",n.CALDAV_APPLE="ca",n.DAV="d",function(e){e.VEVENT="VEVENT",e.VTODO="VTODO",e.VJOURNAL="VJOURNAL",e.VFREEBUSY="VFREEBUSY",e.VTIMEZONE="VTIMEZONE",e.VALARM="VALARM"}(d||(d={}));const c=e=>{const t=Number(e);if(!Number.isNaN(t))return t;const r=e.toLowerCase();return"true"===r||"false"!==r&&e},l=(e,t)=>{if(!e&&!t)return!0;if(!e||!t)return!1;const r=e.trim(),a=t.trim();if(Math.abs(r.length-a.length)>1)return!1;const s="/"===r.slice(-1)?r.slice(0,-1):r,o="/"===a.slice(-1)?a.slice(0,-1):a;return e.includes(o)||t.includes(s)},i=(e,t)=>{if(!e&&!t)return!0;if(!e||!t)return!1;const r=e.trim(),a=t.trim(),s="/"===r.slice(-1)?r.slice(0,-1):r,o="/"===a.slice(-1)?a.slice(0,-1):a;return e.includes(o)||t.includes(s)},u=e=>e.reduce(((e,t)=>({...e,[o[t]]:t})),{}),p=e=>Object.entries(e).reduce(((e,[t,r])=>r?{...e,[t]:r}:e),{}),h=(e,t)=>t?{[e]:t}:{},m=(e,t)=>e?t&&0!==t.length?Object.fromEntries(Object.entries(e).filter((([e])=>!t.includes(e)))):e:{};var A=Object.freeze({__proto__:null,cleanupFalsy:p,conditionalParam:h,excludeHeaders:m,getDAVAttribute:u,urlContains:i,urlEquals:l});const v=r("tsdav:request"),D=async e=>{var r;const{url:s,init:o,convertIncoming:n=!0,parseOutgoing:d=!0}=e,{headers:l={},body:i,namespace:u,method:h,attributes:m}=o,A=n?a.js2xml({_declaration:{_attributes:{version:"1.0",encoding:"utf-8"}},...i,_attributes:m},{compact:!0,spaces:2,elementNameFn:e=>u&&!/^.+:.+/.test(e)?`${u}:${e}`:e}):i,D=await t.fetch(s,{headers:{"Content-Type":"text/xml;charset=UTF-8",...p(l)},body:A,method:h}),y=await D.text();if(!D.ok||!(null===(r=D.headers.get("content-type"))||void 0===r?void 0:r.includes("xml"))||!d)return[{href:D.url,ok:D.ok,status:D.status,statusText:D.statusText,raw:y}];const f=a.xml2js(y,{compact:!0,trim:!0,textFn:(e,t)=>{try{const r=t._parent,a=Object.keys(r),s=a[a.length-1],o=r[s];if(o.length>0){o[o.length-1]=c(e)}else r[s]=c(e)}catch(e){v(e.stack)}},elementNameFn:e=>e.replace(/^.+:/,"").replace(/([-_]\w)/g,(e=>e[1].toUpperCase())),attributesFn:e=>{const t={...e};return delete t.xmlns,t},ignoreDeclaration:!0});return(Array.isArray(f.multistatus.response)?f.multistatus.response:[f.multistatus.response]).map((e=>{var t,r;if(!e)return{status:D.status,statusText:D.statusText,ok:D.ok};const a=/^\S+\s(?<status>\d+)\s(?<statusText>.+)$/.exec(e.status);return{raw:f,href:e.href,status:(null==a?void 0:a.groups)?Number.parseInt(null==a?void 0:a.groups.status,10):D.status,statusText:null!==(r=null===(t=null==a?void 0:a.groups)||void 0===t?void 0:t.statusText)&&void 0!==r?r:D.statusText,ok:!e.error,error:e.error,responsedescription:e.responsedescription,props:(Array.isArray(e.propstat)?e.propstat:[e.propstat]).reduce(((e,t)=>({...e,...null==t?void 0:t.prop})),{})}}))},y=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:o}=e;return D({url:t,init:{method:"PROPFIND",headers:m(p({depth:a,...s}),o),namespace:exports.DAVNamespaceShort.DAV,body:{propfind:{_attributes:u([exports.DAVNamespace.CALDAV,exports.DAVNamespace.CALDAV_APPLE,exports.DAVNamespace.CALENDAR_SERVER,exports.DAVNamespace.CARDDAV,exports.DAVNamespace.DAV]),prop:r}}}})},f=async e=>{const{url:r,data:a,headers:s,headersToExclude:o}=e;return t.fetch(r,{method:"PUT",body:a,headers:m(s,o)})},V=async e=>{const{url:r,data:a,etag:s,headers:o,headersToExclude:n}=e;return t.fetch(r,{method:"PUT",body:a,headers:m(p({"If-Match":s,...o}),n)})},x=async e=>{const{url:r,headers:a,etag:s,headersToExclude:o}=e;return t.fetch(r,{method:"DELETE",headers:m(p({"If-Match":s,...a}),o)})};var C=Object.freeze({__proto__:null,createObject:f,davRequest:D,deleteObject:x,propfind:y,updateObject:V});function g(e,t){const r=e=>t.every((t=>e[t]));return Array.isArray(e)?e.every((e=>r(e))):r(e)}const b=(e,t)=>t.reduce(((t,r)=>e[r]?t:`${t.length?`${t},`:""}${r.toString()}`),""),w=r("tsdav:collection"),S=async e=>{const{url:t,body:r,depth:a,defaultNamespace:s=exports.DAVNamespaceShort.DAV,headers:o,headersToExclude:n}=e,d=await D({url:t,init:{method:"REPORT",headers:m(p({depth:a,...o}),n),namespace:s,body:r}});return 1!==d.length||d[0].raw?d:[]},N=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:o}=e;return D({url:t,init:{method:"MKCOL",headers:m(p({depth:a,...s}),o),namespace:exports.DAVNamespaceShort.DAV,body:r?{mkcol:{set:{prop:r}}}:void 0}})},E=async e=>{var t,r,a,s,o;const{collection:n,headers:d,headersToExclude:c}=e;return null!==(o=null===(s=null===(a=null===(r=null===(t=(await y({url:n.url,props:{[`${exports.DAVNamespaceShort.DAV}:supported-report-set`]:{}},depth:"0",headers:m(d,c)}))[0])||void 0===t?void 0:t.props)||void 0===r?void 0:r.supportedReportSet)||void 0===a?void 0:a.supportedReport)||void 0===s?void 0:s.map((e=>Object.keys(e.report)[0])))&&void 0!==o?o:[]},k=async e=>{var t,r,a;const{collection:s,headers:o,headersToExclude:n}=e,d=(await y({url:s.url,props:{[`${exports.DAVNamespaceShort.CALENDAR_SERVER}:getctag`]:{}},depth:"0",headers:m(o,n)})).filter((e=>i(s.url,e.href)))[0];if(!d)throw new Error("Collection does not exist on server");return{isDirty:s.ctag!==(null===(t=d.props)||void 0===t?void 0:t.getctag),newCtag:null===(a=null===(r=d.props)||void 0===r?void 0:r.getctag)||void 0===a?void 0:a.toString()}},T=e=>{const{url:t,props:r,headers:a,syncLevel:s,syncToken:o,headersToExclude:n}=e;return D({url:t,init:{method:"REPORT",namespace:exports.DAVNamespaceShort.DAV,headers:m({...a},n),body:{"sync-collection":{_attributes:u([exports.DAVNamespace.CALDAV,exports.DAVNamespace.CARDDAV,exports.DAVNamespace.DAV]),"sync-level":s,"sync-token":o,[`${exports.DAVNamespaceShort.DAV}:prop`]:r}}}})},$=async e=>{var t,r,a,s,o,n,d,c,l,u,p;const{collection:h,method:A,headers:v,headersToExclude:D,account:y,detailedResult:f}=e,V=["accountType","homeUrl"];if(!y||!g(y,V)){if(!y)throw new Error("no account for smartCollectionSync");throw new Error(`account must have ${b(y,V)} before smartCollectionSync`)}const x=null!=A?A:(null===(t=h.reports)||void 0===t?void 0:t.includes("syncCollection"))?"webdav":"basic";if(w(`smart collection sync with type ${y.accountType} and method ${x}`),"webdav"===x){const e=await T({url:h.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${"caldav"===y.accountType?exports.DAVNamespaceShort.CALDAV:exports.DAVNamespaceShort.CARDDAV}:${"caldav"===y.accountType?"calendar-data":"address-data"}`]:{},[`${exports.DAVNamespaceShort.DAV}:displayname`]:{}},syncLevel:1,syncToken:h.syncToken,headers:m(v,D)}),t=e.filter((e=>{var t;const r="caldav"===y.accountType?".ics":".vcf";return(null===(t=e.href)||void 0===t?void 0:t.slice(-4))===r})),l=t.filter((e=>404!==e.status)).map((e=>e.href)),u=t.filter((e=>404===e.status)).map((e=>e.href)),p=(l.length&&null!==(a=await(null===(r=null==h?void 0:h.objectMultiGet)||void 0===r?void 0:r.call(h,{url:h.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${"caldav"===y.accountType?exports.DAVNamespaceShort.CALDAV:exports.DAVNamespaceShort.CARDDAV}:${"caldav"===y.accountType?"calendar-data":"address-data"}`]:{}},objectUrls:l,depth:"1",headers:m(v,D)})))&&void 0!==a?a:[]).map((e=>{var t,r,a,s,o,n,d,c,l,i;return{url:null!==(t=e.href)&&void 0!==t?t:"",etag:null===(r=e.props)||void 0===r?void 0:r.getetag,data:"caldav"===(null==y?void 0:y.accountType)?null!==(o=null===(s=null===(a=e.props)||void 0===a?void 0:a.calendarData)||void 0===s?void 0:s._cdata)&&void 0!==o?o:null===(n=e.props)||void 0===n?void 0:n.calendarData:null!==(l=null===(c=null===(d=e.props)||void 0===d?void 0:d.addressData)||void 0===c?void 0:c._cdata)&&void 0!==l?l:null===(i=e.props)||void 0===i?void 0:i.addressData}})),A=null!==(s=h.objects)&&void 0!==s?s:[],V=p.filter((e=>A.every((t=>!i(t.url,e.url))))),x=A.reduce(((e,t)=>{const r=p.find((e=>i(e.url,t.url)));return r&&r.etag&&r.etag!==t.etag?[...e,r]:e}),[]),C=u.map((e=>({url:e,etag:""}))),g=A.filter((e=>p.some((t=>i(e.url,t.url)&&t.etag===e.etag))));return{...h,objects:f?{created:V,updated:x,deleted:C}:[...g,...V,...x],syncToken:null!==(c=null===(d=null===(n=null===(o=e[0])||void 0===o?void 0:o.raw)||void 0===n?void 0:n.multistatus)||void 0===d?void 0:d.syncToken)&&void 0!==c?c:h.syncToken}}if("basic"===x){const{isDirty:e,newCtag:t}=await k({collection:h,headers:m(v,D)}),r=null!==(l=h.objects)&&void 0!==l?l:[],a=null!==(p=await(null===(u=h.fetchObjects)||void 0===u?void 0:u.call(h,{collection:h,headers:m(v,D)})))&&void 0!==p?p:[],s=a.filter((e=>r.every((t=>!i(t.url,e.url))))),o=r.reduce(((e,t)=>{const r=a.find((e=>i(e.url,t.url)));return r&&r.etag&&r.etag!==t.etag?[...e,r]:e}),[]),n=r.filter((e=>a.every((t=>!i(t.url,e.url))))),d=r.filter((e=>a.some((t=>i(e.url,t.url)&&t.etag===e.etag))));if(e)return{...h,objects:f?{created:s,updated:o,deleted:n}:[...d,...s,...o],ctag:t}}return f?{...h,objects:{created:[],updated:[],deleted:[]}}:h};var O=Object.freeze({__proto__:null,collectionQuery:S,isCollectionDirty:k,makeCollection:N,smartCollectionSync:$,supportedReportSet:E,syncCollection:T});const _=r("tsdav:addressBook"),U=async e=>{const{url:t,props:r,filters:a,depth:s,headers:o,headersToExclude:n}=e;return S({url:t,body:{"addressbook-query":{_attributes:u([exports.DAVNamespace.CARDDAV,exports.DAVNamespace.DAV]),[`${exports.DAVNamespaceShort.DAV}:prop`]:r,filter:null!=a?a:{"prop-filter":{_attributes:{name:"FN"}}}}},defaultNamespace:exports.DAVNamespaceShort.CARDDAV,depth:s,headers:m(o,n)})},R=async e=>{const{url:t,props:r,objectUrls:a,depth:s,headers:o}=e;return S({url:t,body:{"addressbook-multiget":{_attributes:u([exports.DAVNamespace.DAV,exports.DAVNamespace.CARDDAV]),[`${exports.DAVNamespaceShort.DAV}:prop`]:r,[`${exports.DAVNamespaceShort.DAV}:href`]:a}},defaultNamespace:exports.DAVNamespaceShort.CARDDAV,depth:s,headers:o})},j=async e=>{const{account:t,headers:r,props:a,headersToExclude:s}=null!=e?e:{},o=["homeUrl","rootUrl"];if(!t||!g(t,o)){if(!t)throw new Error("no account for fetchAddressBooks");throw new Error(`account must have ${b(t,o)} before fetchAddressBooks`)}const n=await y({url:t.homeUrl,props:null!=a?a:{[`${exports.DAVNamespaceShort.DAV}:displayname`]:{},[`${exports.DAVNamespaceShort.CALENDAR_SERVER}:getctag`]:{},[`${exports.DAVNamespaceShort.DAV}:resourcetype`]:{},[`${exports.DAVNamespaceShort.DAV}:sync-token`]:{}},depth:"1",headers:m(r,s)});return Promise.all(n.filter((e=>{var t,r;return Object.keys(null!==(r=null===(t=e.props)||void 0===t?void 0:t.resourcetype)&&void 0!==r?r:{}).includes("addressbook")})).map((e=>{var r,a,s,o,n,d,c,l,i;const u=null!==(s=null===(a=null===(r=e.props)||void 0===r?void 0:r.displayname)||void 0===a?void 0:a._cdata)&&void 0!==s?s:null===(o=e.props)||void 0===o?void 0:o.displayname;return _(`Found address book named ${"string"==typeof u?u:""},\n             props: ${JSON.stringify(e.props)}`),{url:new URL(null!==(n=e.href)&&void 0!==n?n:"",null!==(d=t.rootUrl)&&void 0!==d?d:"").href,ctag:null===(c=e.props)||void 0===c?void 0:c.getctag,displayName:"string"==typeof u?u:"",resourcetype:Object.keys(null===(l=e.props)||void 0===l?void 0:l.resourcetype),syncToken:null===(i=e.props)||void 0===i?void 0:i.syncToken}})).map((async e=>({...e,reports:await E({collection:e,headers:r})}))))},L=async e=>{const{addressBook:t,headers:r,objectUrls:a,headersToExclude:s,urlFilter:o=(e=>e),useMultiGet:n=!0}=e;_(`Fetching vcards from ${null==t?void 0:t.url}`);const d=["url"];if(!t||!g(t,d)){if(!t)throw new Error("cannot fetchVCards for undefined addressBook");throw new Error(`addressBook must have ${b(t,d)} before fetchVCards`)}const c=(null!=a?a:(await U({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{}},depth:"1",headers:m(r,s)})).map((e=>{var t;return e.ok&&null!==(t=e.href)&&void 0!==t?t:""}))).map((e=>e.startsWith("http")||!e?e:new URL(e,t.url).href)).filter(o).map((e=>new URL(e).pathname));let l=[];return c.length>0&&(l=n?await R({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${exports.DAVNamespaceShort.CARDDAV}:address-data`]:{}},objectUrls:c,depth:"1",headers:m(r,s)}):await U({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${exports.DAVNamespaceShort.CARDDAV}:address-data`]:{}},depth:"1",headers:m(r,s)})),l.map((e=>{var r,a,s,o,n,d;return{url:new URL(null!==(r=e.href)&&void 0!==r?r:"",t.url).href,etag:null===(a=e.props)||void 0===a?void 0:a.getetag,data:null!==(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.addressData)||void 0===o?void 0:o._cdata)&&void 0!==n?n:null===(d=e.props)||void 0===d?void 0:d.addressData}}))},H=async e=>{const{addressBook:t,vCardString:r,filename:a,headers:s,headersToExclude:o}=e;return f({url:new URL(a,t.url).href,data:r,headers:m({"content-type":"text/vcard; charset=utf-8","If-None-Match":"*",...s},o)})},P=async e=>{const{vCard:t,headers:r,headersToExclude:a}=e;return V({url:t.url,data:t.data,etag:t.etag,headers:m({"content-type":"text/vcard; charset=utf-8",...r},a)})},B=async e=>{const{vCard:t,headers:r,headersToExclude:a}=e;return x({url:t.url,etag:t.etag,headers:m(r,a)})};var M=Object.freeze({__proto__:null,addressBookMultiGet:R,addressBookQuery:U,createVCard:H,deleteVCard:B,fetchAddressBooks:j,fetchVCards:L,updateVCard:P});const I=r("tsdav:calendar"),F=async e=>{const{url:t,props:r,filters:a,timezone:s,depth:o,headers:n,headersToExclude:d}=e;return S({url:t,body:{"calendar-query":p({_attributes:u([exports.DAVNamespace.CALDAV,exports.DAVNamespace.CALENDAR_SERVER,exports.DAVNamespace.CALDAV_APPLE,exports.DAVNamespace.DAV]),[`${exports.DAVNamespaceShort.DAV}:prop`]:r,filter:a,timezone:s})},defaultNamespace:exports.DAVNamespaceShort.CALDAV,depth:o,headers:m(n,d)})},z=async e=>{const{url:t,props:r,objectUrls:a,filters:s,timezone:o,depth:n,headers:d,headersToExclude:c}=e;return S({url:t,body:{"calendar-multiget":{_attributes:u([exports.DAVNamespace.DAV,exports.DAVNamespace.CALDAV]),[`${exports.DAVNamespaceShort.DAV}:prop`]:r,[`${exports.DAVNamespaceShort.DAV}:href`]:a,...h("filter",s),timezone:o}},defaultNamespace:exports.DAVNamespaceShort.CALDAV,depth:n,headers:m(d,c)})},Z=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:o}=e;return D({url:t,init:{method:"MKCALENDAR",headers:m(p({depth:a,...s}),o),namespace:exports.DAVNamespaceShort.DAV,body:{[`${exports.DAVNamespaceShort.CALDAV}:mkcalendar`]:{_attributes:u([exports.DAVNamespace.DAV,exports.DAVNamespace.CALDAV,exports.DAVNamespace.CALDAV_APPLE]),set:{prop:r}}}}})},q=async e=>{const{headers:t,account:r,props:a,projectedProps:s,headersToExclude:o}=null!=e?e:{},n=["homeUrl","rootUrl"];if(!r||!g(r,n)){if(!r)throw new Error("no account for fetchCalendars");throw new Error(`account must have ${b(r,n)} before fetchCalendars`)}const c=await y({url:r.homeUrl,props:null!=a?a:{[`${exports.DAVNamespaceShort.CALDAV}:calendar-description`]:{},[`${exports.DAVNamespaceShort.CALDAV}:calendar-timezone`]:{},[`${exports.DAVNamespaceShort.DAV}:displayname`]:{},[`${exports.DAVNamespaceShort.CALDAV_APPLE}:calendar-color`]:{},[`${exports.DAVNamespaceShort.CALENDAR_SERVER}:getctag`]:{},[`${exports.DAVNamespaceShort.DAV}:resourcetype`]:{},[`${exports.DAVNamespaceShort.CALDAV}:supported-calendar-component-set`]:{},[`${exports.DAVNamespaceShort.DAV}:sync-token`]:{}},depth:"1",headers:m(t,o)});return Promise.all(c.filter((e=>{var t,r;return Object.keys(null!==(r=null===(t=e.props)||void 0===t?void 0:t.resourcetype)&&void 0!==r?r:{}).includes("calendar")})).filter((e=>{var t,r,a,s;return((Array.isArray(null===(t=e.props)||void 0===t?void 0:t.supportedCalendarComponentSet.comp)?null===(r=e.props)||void 0===r?void 0:r.supportedCalendarComponentSet.comp.map((e=>e._attributes.name)):[null===(s=null===(a=e.props)||void 0===a?void 0:a.supportedCalendarComponentSet.comp)||void 0===s?void 0:s._attributes.name])||[]).some((e=>Object.values(d).includes(e)))})).map((e=>{var t,a,o,n,d,c,l,i,u,p,m,A,v,D,y,f;const V=null===(t=e.props)||void 0===t?void 0:t.calendarDescription,x=null===(a=e.props)||void 0===a?void 0:a.calendarTimezone;return{description:"string"==typeof V?V:"",timezone:"string"==typeof x?x:"",url:new URL(null!==(o=e.href)&&void 0!==o?o:"",null!==(n=r.rootUrl)&&void 0!==n?n:"").href,ctag:null===(d=e.props)||void 0===d?void 0:d.getctag,calendarColor:null===(c=e.props)||void 0===c?void 0:c.calendarColor,displayName:null!==(i=null===(l=e.props)||void 0===l?void 0:l.displayname._cdata)&&void 0!==i?i:null===(u=e.props)||void 0===u?void 0:u.displayname,components:Array.isArray(null===(p=e.props)||void 0===p?void 0:p.supportedCalendarComponentSet.comp)?null===(m=e.props)||void 0===m?void 0:m.supportedCalendarComponentSet.comp.map((e=>e._attributes.name)):[null===(v=null===(A=e.props)||void 0===A?void 0:A.supportedCalendarComponentSet.comp)||void 0===v?void 0:v._attributes.name],resourcetype:Object.keys(null===(D=e.props)||void 0===D?void 0:D.resourcetype),syncToken:null===(y=e.props)||void 0===y?void 0:y.syncToken,...h("projectedProps",Object.fromEntries(Object.entries(null!==(f=e.props)&&void 0!==f?f:{}).filter((([e])=>null==s?void 0:s[e]))))}})).map((async e=>({...e,reports:await E({collection:e,headers:m(t,o)})}))))},Q=async e=>{const{calendar:t,objectUrls:r,filters:a,timeRange:s,headers:o,expand:n,urlFilter:d=(e=>Boolean(null==e?void 0:e.includes(".ics"))),useMultiGet:c=!0,headersToExclude:l}=e;if(s){const e=/^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$/i,t=/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(\.\d+)?(([+-]\d\d:\d\d)|Z)?$/i;if(!(e.test(s.start)&&e.test(s.end)||t.test(s.start)&&t.test(s.end)))throw new Error("invalid timeRange format, not in ISO8601")}I(`Fetching calendar objects from ${null==t?void 0:t.url}`);const i=["url"];if(!t||!g(t,i)){if(!t)throw new Error("cannot fetchCalendarObjects for undefined calendar");throw new Error(`calendar must have ${b(t,i)} before fetchCalendarObjects`)}const u=null!=a?a:[{"comp-filter":{_attributes:{name:"VCALENDAR"},"comp-filter":{_attributes:{name:"VEVENT"},...s?{"time-range":{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}}}],p=(null!=r?r:(await F({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{...n&&s?{[`${exports.DAVNamespaceShort.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},filters:u,depth:"1",headers:m(o,l)})).map((e=>{var t;return null!==(t=e.href)&&void 0!==t?t:""}))).map((e=>e.startsWith("http")||!e?e:new URL(e,t.url).href)).filter(d).map((e=>new URL(e).pathname));let h=[];return p.length>0&&(h=!c||n?await F({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${exports.DAVNamespaceShort.CALDAV}:calendar-data`]:{...n&&s?{[`${exports.DAVNamespaceShort.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},filters:u,depth:"1",headers:m(o,l)}):await z({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${exports.DAVNamespaceShort.CALDAV}:calendar-data`]:{...n&&s?{[`${exports.DAVNamespaceShort.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},objectUrls:p,depth:"1",headers:m(o,l)})),h.map((e=>{var r,a,s,o,n,d;return{url:new URL(null!==(r=e.href)&&void 0!==r?r:"",t.url).href,etag:`${null===(a=e.props)||void 0===a?void 0:a.getetag}`,data:null!==(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.calendarData)||void 0===o?void 0:o._cdata)&&void 0!==n?n:null===(d=e.props)||void 0===d?void 0:d.calendarData}}))},G=async e=>{const{calendar:t,iCalString:r,filename:a,headers:s,headersToExclude:o}=e;return f({url:new URL(a,t.url).href,data:r,headers:m({"content-type":"text/calendar; charset=utf-8","If-None-Match":"*",...s},o)})},J=async e=>{const{calendarObject:t,headers:r,headersToExclude:a}=e;return V({url:t.url,data:t.data,etag:t.etag,headers:m({"content-type":"text/calendar; charset=utf-8",...r},a)})},K=async e=>{const{calendarObject:t,headers:r,headersToExclude:a}=e;return x({url:t.url,etag:t.etag,headers:m(r,a)})},W=async e=>{var t;const{oldCalendars:r,account:a,detailedResult:s,headers:o,headersToExclude:n}=e;if(!a)throw new Error("Must have account before syncCalendars");const d=null!==(t=null!=r?r:a.calendars)&&void 0!==t?t:[],c=await q({account:a,headers:m(o,n)}),l=c.filter((e=>d.every((t=>!i(t.url,e.url)))));I(`new calendars: ${l.map((e=>e.displayName))}`);const u=d.reduce(((e,t)=>{const r=c.find((e=>i(e.url,t.url)));return r&&(r.syncToken&&r.syncToken!==t.syncToken||r.ctag&&r.ctag!==t.ctag)?[...e,r]:e}),[]);I(`updated calendars: ${u.map((e=>e.displayName))}`);const p=await Promise.all(u.map((async e=>await $({collection:{...e,objectMultiGet:z},method:"webdav",headers:m(o,n),account:a})))),h=d.filter((e=>c.every((t=>!i(t.url,e.url)))));I(`deleted calendars: ${h.map((e=>e.displayName))}`);const A=d.filter((e=>c.some((t=>i(t.url,e.url)&&(t.syncToken&&t.syncToken!==e.syncToken||t.ctag&&t.ctag!==e.ctag)))));return s?{created:l,updated:u,deleted:h}:[...A,...l,...p]},Y=async e=>{const{url:t,timeRange:r,depth:a,headers:s,headersToExclude:o}=e;if(!r)throw new Error("timeRange is required");{const e=/^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$/i,t=/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(\.\d+)?(([+-]\d\d:\d\d)|Z)?$/i;if(!(e.test(r.start)&&e.test(r.end)||t.test(r.start)&&t.test(r.end)))throw new Error("invalid timeRange format, not in ISO8601")}return(await S({url:t,body:{"free-busy-query":p({_attributes:u([exports.DAVNamespace.CALDAV]),[`${exports.DAVNamespaceShort.CALDAV}:time-range`]:{_attributes:{start:`${new Date(r.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(r.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}})},defaultNamespace:exports.DAVNamespaceShort.CALDAV,depth:a,headers:m(s,o)}))[0]};var X=Object.freeze({__proto__:null,calendarMultiGet:z,calendarQuery:F,createCalendarObject:G,deleteCalendarObject:K,fetchCalendarObjects:Q,fetchCalendars:q,freeBusyQuery:Y,makeCalendar:Z,syncCalendars:W,updateCalendarObject:J});const ee=r("tsdav:account"),te=async e=>{var r,a;ee("Service discovery...");const{account:s,headers:o,headersToExclude:n}=e,d=new URL(s.serverUrl),c=new URL(`/.well-known/${s.accountType}`,d);c.protocol=null!==(r=d.protocol)&&void 0!==r?r:"http";try{const e=await t.fetch(c.href,{headers:m(o,n),method:"PROPFIND",redirect:"manual"});if(e.status>=300&&e.status<400){const t=e.headers.get("Location");if("string"==typeof t&&t.length){ee(`Service discovery redirected to ${t}`);const e=new URL(t,d);return e.hostname===c.hostname&&c.port&&!e.port&&(e.port=c.port),e.protocol=null!==(a=d.protocol)&&void 0!==a?a:"http",e.href}}}catch(e){ee(`Service discovery failed: ${e.stack}`)}return d.href},re=async e=>{var t,r,a,s,o;const{account:n,headers:d,headersToExclude:c}=e,l=["rootUrl"];if(!g(n,l))throw new Error(`account must have ${b(n,l)} before fetchPrincipalUrl`);ee(`Fetching principal url from path ${n.rootUrl}`);const[i]=await y({url:n.rootUrl,props:{[`${exports.DAVNamespaceShort.DAV}:current-user-principal`]:{}},depth:"0",headers:m(d,c)});if(!i.ok&&(ee(`Fetch principal url failed: ${i.statusText}`),401===i.status))throw new Error("Invalid credentials");return ee(`Fetched principal url ${null===(r=null===(t=i.props)||void 0===t?void 0:t.currentUserPrincipal)||void 0===r?void 0:r.href}`),new URL(null!==(o=null===(s=null===(a=i.props)||void 0===a?void 0:a.currentUserPrincipal)||void 0===s?void 0:s.href)&&void 0!==o?o:"",n.rootUrl).href},ae=async e=>{var t,r;const{account:a,headers:s,headersToExclude:o}=e,n=["principalUrl","rootUrl"];if(!g(a,n))throw new Error(`account must have ${b(a,n)} before fetchHomeUrl`);ee(`Fetch home url from ${a.principalUrl}`);const d=(await y({url:a.principalUrl,props:"caldav"===a.accountType?{[`${exports.DAVNamespaceShort.CALDAV}:calendar-home-set`]:{}}:{[`${exports.DAVNamespaceShort.CARDDAV}:addressbook-home-set`]:{}},depth:"0",headers:m(s,o)})).find((e=>i(a.principalUrl,e.href)));if(!d||!d.ok)throw new Error("cannot find homeUrl");const c=new URL("caldav"===a.accountType?null===(t=null==d?void 0:d.props)||void 0===t?void 0:t.calendarHomeSet.href:null===(r=null==d?void 0:d.props)||void 0===r?void 0:r.addressbookHomeSet.href,a.rootUrl).href;return ee(`Fetched home url ${c}`),c},se=async e=>{const{account:t,headers:r,loadCollections:a=!1,loadObjects:s=!1,headersToExclude:o}=e,n={...t};return n.rootUrl=n.rootUrl||await te({account:t,headers:m(r,o)}),n.principalUrl=n.principalUrl||await re({account:n,headers:m(r,o)}),n.homeUrl=n.homeUrl||await ae({account:n,headers:m(r,o)}),(a||s)&&("caldav"===t.accountType?n.calendars=await q({headers:m(r,o),account:n}):"carddav"===t.accountType&&(n.addressBooks=await j({headers:m(r,o),account:n}))),s&&("caldav"===t.accountType&&n.calendars?n.calendars=await Promise.all(n.calendars.map((async e=>({...e,objects:await Q({calendar:e,headers:m(r,o)})})))):"carddav"===t.accountType&&n.addressBooks&&(n.addressBooks=await Promise.all(n.addressBooks.map((async e=>({...e,objects:await L({addressBook:e,headers:m(r,o)})})))))),n};var oe=Object.freeze({__proto__:null,createAccount:se,fetchHomeUrl:ae,fetchPrincipalUrl:re,serviceDiscovery:te});const ne=r("tsdav:authHelper"),de=(e,t)=>(...r)=>e({...t,...r[0]}),ce=e=>(ne(`Basic auth token generated: ${s.encode(`${e.username}:${e.password}`)}`),{authorization:`Basic ${s.encode(`${e.username}:${e.password}`)}`}),le=async e=>{const r=["authorizationCode","redirectUrl","clientId","clientSecret","tokenUrl"];if(!g(e,r))throw new Error(`Oauth credentials missing: ${b(e,r)}`);const a=new URLSearchParams({grant_type:"authorization_code",code:e.authorizationCode,redirect_uri:e.redirectUrl,client_id:e.clientId,client_secret:e.clientSecret});ne(e.tokenUrl),ne(a.toString());const s=await t.fetch(e.tokenUrl,{method:"POST",body:a.toString(),headers:{"content-length":`${a.toString().length}`,"content-type":"application/x-www-form-urlencoded"}});if(s.ok){return await s.json()}return ne(`Fetch Oauth tokens failed: ${await s.text()}`),{}},ie=async e=>{const r=["refreshToken","clientId","clientSecret","tokenUrl"];if(!g(e,r))throw new Error(`Oauth credentials missing: ${b(e,r)}`);const a=new URLSearchParams({client_id:e.clientId,client_secret:e.clientSecret,refresh_token:e.refreshToken,grant_type:"refresh_token"}),s=await t.fetch(e.tokenUrl,{method:"POST",body:a.toString(),headers:{"Content-Type":"application/x-www-form-urlencoded"}});if(s.ok){return await s.json()}return ne(`Refresh access token failed: ${await s.text()}`),{}},ue=async e=>{var t;ne("Fetching oauth headers");let r={};return e.refreshToken?(e.refreshToken&&!e.accessToken||Date.now()>(null!==(t=e.expiration)&&void 0!==t?t:0))&&(r=await ie(e)):r=await le(e),ne(`Oauth tokens fetched: ${r.access_token}`),{tokens:r,headers:{authorization:`Bearer ${r.access_token}`}}};var pe=Object.freeze({__proto__:null,defaultParam:de,fetchOauthTokens:le,getBasicAuthHeaders:ce,getOauthHeaders:ue,refreshAccessToken:ie});const he=async e=>{var t;const{serverUrl:r,credentials:a,authMethod:s,defaultAccountType:o,authFunction:n,rootUrl:d,principalUrl:c,homeUrl:l}=e;let i={};switch(s){case"Basic":i=ce(a);break;case"Oauth":i=(await ue(a)).headers;break;case"Digest":i={Authorization:`Digest ${a.digestString}`};break;case"Custom":i=null!==(t=await(null==n?void 0:n(a)))&&void 0!==t?t:{};break;default:throw new Error("Invalid auth method")}const u=o?await se({account:{serverUrl:r,credentials:a,accountType:o,rootUrl:d,principalUrl:c,homeUrl:l},headers:i}):void 0,p=de(f,{url:r,headers:i}),h=de(V,{headers:i,url:r}),m=de(x,{headers:i,url:r}),A=de(y,{headers:i}),v=de(S,{headers:i}),C=de(N,{headers:i}),g=de(T,{headers:i}),b=de(E,{headers:i}),w=de(k,{headers:i}),O=de($,{headers:i,account:u}),_=de(F,{headers:i}),M=de(z,{headers:i}),I=de(Z,{headers:i}),Y=de(q,{headers:i,account:u}),X=de(Q,{headers:i}),ee=de(G,{headers:i}),te=de(J,{headers:i}),re=de(K,{headers:i}),ae=de(W,{account:u,headers:i}),oe=de(U,{headers:i}),ne=de(R,{headers:i});return{davRequest:async e=>{const{init:t,...r}=e,{headers:a,...s}=t;return D({...r,init:{...s,headers:{...i,...a}}})},propfind:A,createAccount:async e=>{const{account:t,headers:s,loadCollections:o,loadObjects:n}=e;return se({account:{serverUrl:r,credentials:a,...t},headers:{...i,...s},loadCollections:o,loadObjects:n})},createObject:p,updateObject:h,deleteObject:m,calendarQuery:_,addressBookQuery:oe,collectionQuery:v,makeCollection:C,calendarMultiGet:M,makeCalendar:I,syncCollection:g,supportedReportSet:b,isCollectionDirty:w,smartCollectionSync:O,fetchCalendars:Y,fetchCalendarObjects:X,createCalendarObject:ee,updateCalendarObject:te,deleteCalendarObject:re,syncCalendars:ae,fetchAddressBooks:de(j,{account:u,headers:i}),addressBookMultiGet:ne,fetchVCards:de(L,{headers:i}),createVCard:de(H,{headers:i}),updateVCard:de(P,{headers:i}),deleteVCard:de(B,{headers:i}),defaultAccount:u}};class me{constructor(e){var t,r;this.serverUrl=e.serverUrl,this.credentials=e.credentials,this.authMethod=null!==(t=e.authMethod)&&void 0!==t?t:"Basic",this.accountType=null!==(r=e.defaultAccountType)&&void 0!==r?r:"caldav"}async login(){var e;switch(this.authMethod){case"Basic":this.authHeaders=ce(this.credentials);break;case"Oauth":this.authHeaders=(await ue(this.credentials)).headers;break;case"Digest":this.authHeaders={Authorization:`Digest ${this.credentials.digestString}`};break;case"Custom":this.authHeaders=await(null===(e=this.authFunction)||void 0===e?void 0:e.call(this,this.credentials));break;default:throw new Error("Invalid auth method")}this.account=this.accountType?await se({account:{serverUrl:this.serverUrl,credentials:this.credentials,accountType:this.accountType},headers:this.authHeaders}):void 0}async davRequest(e){const{init:t,...r}=e,{headers:a,...s}=t;return D({...r,init:{...s,headers:{...this.authHeaders,...a}}})}async createObject(...e){return de(f,{url:this.serverUrl,headers:this.authHeaders})(e[0])}async updateObject(...e){return de(V,{headers:this.authHeaders,url:this.serverUrl})(e[0])}async deleteObject(...e){return de(x,{headers:this.authHeaders,url:this.serverUrl})(e[0])}async propfind(...e){return de(y,{headers:this.authHeaders})(e[0])}async createAccount(e){const{account:t,headers:r,loadCollections:a,loadObjects:s}=e;return se({account:{serverUrl:this.serverUrl,credentials:this.credentials,...t},headers:{...this.authHeaders,...r},loadCollections:a,loadObjects:s})}async collectionQuery(...e){return de(S,{headers:this.authHeaders})(e[0])}async makeCollection(...e){return de(N,{headers:this.authHeaders})(e[0])}async syncCollection(...e){return de(T,{headers:this.authHeaders})(e[0])}async supportedReportSet(...e){return de(E,{headers:this.authHeaders})(e[0])}async isCollectionDirty(...e){return de(k,{headers:this.authHeaders})(e[0])}async smartCollectionSync(...e){return de($,{headers:this.authHeaders,account:this.account})(e[0])}async calendarQuery(...e){return de(F,{headers:this.authHeaders})(e[0])}async makeCalendar(...e){return de(Z,{headers:this.authHeaders})(e[0])}async calendarMultiGet(...e){return de(z,{headers:this.authHeaders})(e[0])}async fetchCalendars(...e){return de(q,{headers:this.authHeaders,account:this.account})(null==e?void 0:e[0])}async fetchCalendarObjects(...e){return de(Q,{headers:this.authHeaders})(e[0])}async createCalendarObject(...e){return de(G,{headers:this.authHeaders})(e[0])}async updateCalendarObject(...e){return de(J,{headers:this.authHeaders})(e[0])}async deleteCalendarObject(...e){return de(K,{headers:this.authHeaders})(e[0])}async syncCalendars(...e){return de(W,{headers:this.authHeaders,account:this.account})(e[0])}async addressBookQuery(...e){return de(U,{headers:this.authHeaders})(e[0])}async addressBookMultiGet(...e){return de(R,{headers:this.authHeaders})(e[0])}async fetchAddressBooks(...e){return de(j,{headers:this.authHeaders,account:this.account})(null==e?void 0:e[0])}async fetchVCards(...e){return de(L,{headers:this.authHeaders})(e[0])}async createVCard(...e){return de(H,{headers:this.authHeaders})(e[0])}async updateVCard(...e){return de(P,{headers:this.authHeaders})(e[0])}async deleteVCard(...e){return de(B,{headers:this.authHeaders})(e[0])}}var Ae=Object.freeze({__proto__:null,DAVClient:me,createDAVClient:he}),ve={DAVNamespace:exports.DAVNamespace,DAVNamespaceShort:exports.DAVNamespaceShort,DAVAttributeMap:o,...Ae,...C,...O,...oe,...M,...X,...pe,...A};exports.DAVAttributeMap=o,exports.DAVClient=me,exports.addressBookQuery=U,exports.calendarMultiGet=z,exports.calendarQuery=F,exports.cleanupFalsy=p,exports.collectionQuery=S,exports.createAccount=se,exports.createCalendarObject=G,exports.createDAVClient=he,exports.createObject=f,exports.createVCard=H,exports.davRequest=D,exports.default=ve,exports.deleteCalendarObject=K,exports.deleteObject=x,exports.deleteVCard=B,exports.fetchAddressBooks=j,exports.fetchCalendarObjects=Q,exports.fetchCalendars=q,exports.fetchOauthTokens=le,exports.fetchVCards=L,exports.freeBusyQuery=Y,exports.getBasicAuthHeaders=ce,exports.getDAVAttribute=u,exports.getOauthHeaders=ue,exports.isCollectionDirty=k,exports.makeCalendar=Z,exports.propfind=y,exports.refreshAccessToken=ie,exports.smartCollectionSync=$,exports.supportedReportSet=E,exports.syncCalendars=W,exports.syncCollection=T,exports.updateCalendarObject=J,exports.updateObject=V,exports.updateVCard=P,exports.urlContains=i,exports.urlEquals=l;
